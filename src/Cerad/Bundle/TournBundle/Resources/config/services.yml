parameters:
#    cerad_tourn.example.class: Cerad\Bundle\TournBundle\Example

services:
# =====================================================
# Twig extensions
    cerad_tourn.twig_extension:
        class:  Cerad\Bundle\TournBundle\TwigExtension\TournExtension
        arguments:  
            - '@cerad_project.find_default.in_memory'
            - '%cerad_tourn_show_configs%'
            - '@cerad_org.org_repository'
        tags:
            - { name: twig.extension }
            
    cerad_tourn.twig_admin_extension:
        class:  Cerad\Bundle\TournBundle\TwigExtension\TournAdminExtension
        arguments:  
            - '@cerad_user.user_repository'
            - '@cerad_person.person_repository'
        tags:
            - { name: twig.extension }            

    cerad_tourn.schedule_official_search.form_type:
        class: Cerad\Bundle\TournBundle\FormType\Schedule\Official\SearchFormType
        tags:
            - { name: form.type, alias: cerad_schedule_official_search }
            
    cerad_tourn.s1games_results:
        class: Cerad\Bundle\TournBundle\Results\S1GamesResults

    cerad_tourn.s5games_results:
        class: Cerad\Bundle\TournBundle\Results\S5GamesResults
        
    cerad_tourn.excel:
        class:  Cerad\Component\Excel\Excel

    cerad_tourn.schedule_official.export_csv:
        class:  Cerad\Bundle\TournBundle\Schedule\Official\ScheduleOfficialExportCSV

    cerad_tourn.schedule_official.export_xls:
        class:  Cerad\Bundle\TournBundle\Schedule\Official\ScheduleOfficialExportXLS
        arguments:  
            - '@cerad_tourn.excel'

# Used for generating list of available officials for assigning
# Might need a different select for each type of tournament unless we clean up person-project-plan
    cerad_tourn.schedule_officials.select_s1games:
        class:  Cerad\Bundle\TournBundle\Schedule\Officials\Select\ScheduleOfficialsSelectS1Games
        arguments:  
            - '@cerad_person.person_repository'

# ==========================================================
# 23 Jan 2014
# Experiment with defining action models as services

    cerad_tourn.action_helper:
        class: Cerad\Bundle\TournBundle\Controller\ActionHelper
        arguments:
            - '@logger'
            - '@kernel'
            - '@router'
            - '@security.context'
            - '@form.factory'
            - '@templating'
            
    cerad_tourn.action_helper2:
        class: Cerad\Bundle\TournBundle\Controller\ActionHelper2
        calls:
             - [setContainer, ['@service_container']]
        


            