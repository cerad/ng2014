parameters:
    cerad_game__game_official__assign_slot__workflow__class:
        Cerad\Bundle\GameBundle\Service\GameOfficial\AssignSlot\AssignSlotWorkflow
        
    cerad_game__game_event_listener__class:
        Cerad\Bundle\GameBundle\EventListener\GameEventListener
        
    cerad_team__team_event_listener__class:
        Cerad\Bundle\GameBundle\EventListener\TeamEventListener

services:

# =============================================================
# Game Stuff

    cerad_game__entity_manager__doctrine:
        alias: doctrine.orm.games_entity_manager
        
    cerad_game__game_repository__doctrine:
        class:  Cerad\Bundle\GameBundle\Doctrine\EntityRepository\GameRepository
        factory_service: 'cerad_game__entity_manager__doctrine'
        factory_method:  'getRepository'
        arguments:  
            - 'Cerad\Bundle\GameBundle\Doctrine\Entity\Game'
            
    cerad_game__game_team_repository__doctrine:
        class:  Cerad\Bundle\GameBundle\Doctrine\EntityRepository\GameTeamRepository
        factory_service: 'cerad_game__entity_manager__doctrine'
        factory_method:  'getRepository'
        arguments:  
            - 'Cerad\Bundle\GameBundle\Doctrine\Entity\GameTeam'
            
    cerad_game__team_repository__doctrine:
        class:  Cerad\Bundle\GameBundle\Doctrine\EntityRepository\TeamRepository
        factory_service: 'cerad_game__entity_manager__doctrine'
        factory_method:  'getRepository'
        arguments:  
            - 'Cerad\Bundle\GameBundle\Doctrine\Entity\Team'
        
    cerad_game__game_repository:
        alias: cerad_game__game_repository__doctrine
        
    cerad_game__game_team_repository:
        alias: cerad_game__game_team_repository__doctrine
        
    cerad_game__team_repository:
        alias: cerad_game__team_repository__doctrine
            
    cerad_game__game_event_listener:
        class: '%cerad_game__game_event_listener__class%'
        calls:
             - [setContainer, ['@service_container']]
        tags:
            - { name: kernel.event_subscriber }
        arguments:
            - 'cerad_game__game_repository'
            
    cerad_team__team_event_listener:
        class: '%cerad_team__team_event_listener__class%'
        calls:
             - [setContainer, ['@service_container']]
        tags:
            - { name: kernel.event_subscriber }
            
# ==========================================
# Game Official
    cerad_game__game_official__repository_doctrine:
        class:  Cerad\Bundle\GameBundle\Doctrine\EntityRepository\GameOfficialRepository
        factory_service: 'cerad_game__entity_manager__doctrine'
        factory_method:  'getRepository'
        arguments:  
            - 'Cerad\Bundle\GameBundle\Doctrine\Entity\GameOfficial'
        
    cerad_game__game_official__repository:
        alias: cerad_game__game_official__repository_doctrine
        
# ====================================================================
# Some data transformers
    cerad_game__transformer:
      class: Cerad\Bundle\GameBundle\DataTransformer\GameTransformer
      arguments:
        - '@cerad_level__level_repository'
        
# ====================================================================
# Assorted loaders and exporters
    cerad_game__convert_games__rick_to_yaml:
        class: Cerad\Bundle\GameBundle\Service\GameSchedule\Convert\ConvertGamesRickToYaml
        
    cerad_game__convert_teams__rick_to_yaml:
        class: Cerad\Bundle\GameBundle\Service\GameSchedule\Convert\ConvertTeamsRickToYaml
        scope: prototype
        
    cerad_game__load_games:
        class: Cerad\Bundle\GameBundle\Service\GameSchedule\Load\LoadGames
        scope: prototype
        arguments:
            - '@cerad_game__game_repository'
        
    cerad_game__load_teams:
        class: Cerad\Bundle\GameBundle\Service\GameSchedule\Load\LoadTeams
        scope: prototype
        arguments:
            - '@cerad_game__team_repository'
            
    cerad_game__link_teams:
        class: Cerad\Bundle\GameBundle\Service\GameSchedule\Load\LinkTeams
        scope: prototype
        arguments:
            - '@cerad_game__game_repository'
            - '@cerad_game__team_repository'
        
